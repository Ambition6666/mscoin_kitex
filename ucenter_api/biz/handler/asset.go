// Code generated by hertz generator.

package handler

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	model "ucenter_api/biz/model"
)

// FindWalletBySymbol .
// @router /uc/asset/wallet/:coinName [POST]
func FindWalletBySymbol(ctx context.Context, c *app.RequestContext) {
	var err error
	var req model.AssetReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(model.MemberWallet)

	c.JSON(consts.StatusOK, resp)
}

// FindWallet .
// @router /uc/asset/wallet [POST]
func FindWallet(ctx context.Context, c *app.RequestContext) {
	var err error
	var req model.AssetReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(model.MemberWalletList)

	c.JSON(consts.StatusOK, resp)
}

// ResetWalletAddress .
// @router /uc/asset/wallet/reset-address [POST]
func ResetWalletAddress(ctx context.Context, c *app.RequestContext) {
	var err error
	var req model.AssetReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(model.Response)

	c.JSON(consts.StatusOK, resp)
}

// FindTransaction .
// @router /uc/asset/transaction/all [POST]
func FindTransaction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req model.AssetReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(model.NoRes)

	c.JSON(consts.StatusOK, resp)
}
