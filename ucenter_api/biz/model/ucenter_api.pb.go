// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.24.0--rc2
// source: ucenter_api.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	_ "ucenter_api/biz/model/api"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Password     string `protobuf:"bytes,2,opt,name=password,proto3" form:"password" json:"password,omitempty" query:"password"`
	Captcha      []byte `protobuf:"bytes,3,opt,name=captcha,proto3" form:"captcha" json:"captcha,omitempty" query:"captcha"`
	Phone        string `protobuf:"bytes,4,opt,name=phone,proto3" form:"phone" json:"phone,omitempty" query:"phone"`
	Promotion    string `protobuf:"bytes,5,opt,name=promotion,proto3" form:"promotion" json:"promotion,omitempty" query:"promotion"`
	Code         string `protobuf:"bytes,6,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Country      string `protobuf:"bytes,7,opt,name=country,proto3" form:"country" json:"country,omitempty" query:"country"`
	SuperPartner string `protobuf:"bytes,8,opt,name=super_partner,json=superPartner,proto3" form:"super_partner" json:"super_partner,omitempty" query:"super_partner"`
	Ip           string `protobuf:"bytes,9,opt,name=ip,proto3" form:"ip" json:"ip,omitempty" query:"ip"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Request) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Request) GetCaptcha() []byte {
	if x != nil {
		return x.Captcha
	}
	return nil
}

func (x *Request) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Request) GetPromotion() string {
	if x != nil {
		return x.Promotion
	}
	return ""
}

func (x *Request) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Request) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Request) GetSuperPartner() string {
	if x != nil {
		return x.SuperPartner
	}
	return ""
}

func (x *Request) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type CaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" form:"server" json:"server,omitempty" query:"server"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" form:"token" json:"token,omitempty" query:"token"`
}

func (x *CaptchaReq) Reset() {
	*x = CaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaReq) ProtoMessage() {}

func (x *CaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaReq.ProtoReflect.Descriptor instead.
func (*CaptchaReq) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{1}
}

func (x *CaptchaReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *CaptchaReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" form:"message" json:"message,omitempty" query:"message"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone   string `protobuf:"bytes,1,opt,name=phone,proto3" form:"phone" json:"phone,omitempty" query:"phone"`
	Country string `protobuf:"bytes,2,opt,name=country,proto3" form:"country" json:"country,omitempty" query:"country"`
}

func (x *CodeRequest) Reset() {
	*x = CodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeRequest) ProtoMessage() {}

func (x *CodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeRequest.ProtoReflect.Descriptor instead.
func (*CodeRequest) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{3}
}

func (x *CodeRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CodeRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type NoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoRes) Reset() {
	*x = NoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoRes) ProtoMessage() {}

func (x *NoRes) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoRes.ProtoReflect.Descriptor instead.
func (*NoRes) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{4}
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" form:"password" json:"password,omitempty" query:"password"`
	Captcha  []byte `protobuf:"bytes,3,opt,name=captcha,proto3" form:"captcha" json:"captcha,omitempty" query:"captcha"`
	Ip       string `protobuf:"bytes,4,opt,name=ip,proto3" form:"ip" json:"ip,omitempty" query:"ip"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{5}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetCaptcha() []byte {
	if x != nil {
		return x.Captcha
	}
	return nil
}

func (x *LoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" form:"token" json:"token,omitempty" query:"token"`
	MemberLevel   string `protobuf:"bytes,3,opt,name=member_level,json=memberLevel,proto3" form:"member_level" json:"member_level,omitempty" query:"member_level"`
	RealName      string `protobuf:"bytes,4,opt,name=real_name,json=realName,proto3" form:"real_name" json:"real_name,omitempty" query:"real_name"`
	Country       string `protobuf:"bytes,5,opt,name=country,proto3" form:"country" json:"country,omitempty" query:"country"`
	Avatar        string `protobuf:"bytes,6,opt,name=avatar,proto3" form:"avatar" json:"avatar,omitempty" query:"avatar"`
	PromotionCode string `protobuf:"bytes,7,opt,name=promotion_code,json=promotionCode,proto3" form:"promotion_code" json:"promotion_code,omitempty" query:"promotion_code"`
	Id            int64  `protobuf:"varint,8,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	LoginCount    int32  `protobuf:"varint,9,opt,name=login_count,json=loginCount,proto3" form:"login_count" json:"login_count,omitempty" query:"login_count"`
	SuperPartner  string `protobuf:"bytes,10,opt,name=super_partner,json=superPartner,proto3" form:"super_partner" json:"super_partner,omitempty" query:"super_partner"`
	MemberRate    int32  `protobuf:"varint,11,opt,name=member_rate,json=memberRate,proto3" form:"member_rate" json:"member_rate,omitempty" query:"member_rate"`
}

func (x *LoginRes) Reset() {
	*x = LoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRes) ProtoMessage() {}

func (x *LoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRes.ProtoReflect.Descriptor instead.
func (*LoginRes) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{6}
}

func (x *LoginRes) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRes) GetMemberLevel() string {
	if x != nil {
		return x.MemberLevel
	}
	return ""
}

func (x *LoginRes) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *LoginRes) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *LoginRes) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *LoginRes) GetPromotionCode() string {
	if x != nil {
		return x.PromotionCode
	}
	return ""
}

func (x *LoginRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginRes) GetLoginCount() int32 {
	if x != nil {
		return x.LoginCount
	}
	return 0
}

func (x *LoginRes) GetSuperPartner() string {
	if x != nil {
		return x.SuperPartner
	}
	return ""
}

func (x *LoginRes) GetMemberRate() int32 {
	if x != nil {
		return x.MemberRate
	}
	return 0
}

type AssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinName  string `protobuf:"bytes,1,opt,name=coin_name,json=coinName,proto3" form:"coin_name" json:"coin_name,omitempty" query:"coin_name"`
	Ip        string `protobuf:"bytes,2,opt,name=ip,proto3" form:"ip" json:"ip,omitempty" query:"ip"`
	Unit      string `protobuf:"bytes,3,opt,name=unit,proto3" form:"unit" json:"unit,omitempty" query:"unit"`
	PageNo    int32  `protobuf:"varint,4,opt,name=page_no,json=pageNo,proto3" form:"page_no" json:"page_no,omitempty" query:"page_no"`
	PageSize  int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"`
	StartTime string `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" form:"start_time" json:"start_time,omitempty" query:"start_time"`
	EndTime   string `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" form:"end_time" json:"end_time,omitempty" query:"end_time"`
	Symbol    string `protobuf:"bytes,8,opt,name=symbol,proto3" form:"symbol" json:"symbol,omitempty" query:"symbol"`
	Type      string `protobuf:"bytes,9,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
}

func (x *AssetReq) Reset() {
	*x = AssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetReq) ProtoMessage() {}

func (x *AssetReq) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetReq.ProtoReflect.Descriptor instead.
func (*AssetReq) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{7}
}

func (x *AssetReq) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *AssetReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AssetReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *AssetReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *AssetReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AssetReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AssetReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AssetReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AssetReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type MemberTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64   `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	Address     string  `protobuf:"bytes,2,opt,name=address,proto3" form:"address" json:"address,omitempty" query:"address"`
	Amount      float64 `protobuf:"fixed64,3,opt,name=amount,proto3" form:"amount" json:"amount,omitempty" query:"amount"`
	CreateTime  string  `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`
	Fee         float64 `protobuf:"fixed64,5,opt,name=fee,proto3" form:"fee" json:"fee,omitempty" query:"fee"`
	Flag        int32   `protobuf:"varint,6,opt,name=flag,proto3" form:"flag" json:"flag,omitempty" query:"flag"`
	MemberId    int64   `protobuf:"varint,7,opt,name=member_id,json=memberId,proto3" form:"member_id" json:"member_id,omitempty" query:"member_id"`
	Symbol      string  `protobuf:"bytes,8,opt,name=symbol,proto3" form:"symbol" json:"symbol,omitempty" query:"symbol"`
	Type        string  `protobuf:"bytes,9,opt,name=type,proto3" form:"type" json:"type,omitempty" query:"type"`
	DiscountFee string  `protobuf:"bytes,10,opt,name=discount_fee,json=discountFee,proto3" form:"discount_fee" json:"discount_fee,omitempty" query:"discount_fee"`
	RealFee     string  `protobuf:"bytes,11,opt,name=real_fee,json=realFee,proto3" form:"real_fee" json:"real_fee,omitempty" query:"real_fee"`
}

func (x *MemberTransaction) Reset() {
	*x = MemberTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberTransaction) ProtoMessage() {}

func (x *MemberTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberTransaction.ProtoReflect.Descriptor instead.
func (*MemberTransaction) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{8}
}

func (x *MemberTransaction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberTransaction) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MemberTransaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MemberTransaction) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberTransaction) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *MemberTransaction) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MemberTransaction) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberTransaction) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MemberTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemberTransaction) GetDiscountFee() string {
	if x != nil {
		return x.DiscountFee
	}
	return ""
}

func (x *MemberTransaction) GetRealFee() string {
	if x != nil {
		return x.RealFee
	}
	return ""
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32   `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	Name              string  `protobuf:"bytes,2,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	CanAutoWithdraw   int32   `protobuf:"varint,3,opt,name=can_auto_withdraw,json=canAutoWithdraw,proto3" form:"can_auto_withdraw" json:"can_auto_withdraw,omitempty" query:"can_auto_withdraw"`
	CanRecharge       int32   `protobuf:"varint,4,opt,name=can_recharge,json=canRecharge,proto3" form:"can_recharge" json:"can_recharge,omitempty" query:"can_recharge"`
	CanTransfer       int32   `protobuf:"varint,5,opt,name=can_transfer,json=canTransfer,proto3" form:"can_transfer" json:"can_transfer,omitempty" query:"can_transfer"`
	CanWithdraw       int32   `protobuf:"varint,6,opt,name=can_withdraw,json=canWithdraw,proto3" form:"can_withdraw" json:"can_withdraw,omitempty" query:"can_withdraw"`
	CnyRate           float64 `protobuf:"fixed64,7,opt,name=cny_rate,json=cnyRate,proto3" form:"cny_rate" json:"cny_rate,omitempty" query:"cny_rate"`
	EnableRpc         int32   `protobuf:"varint,8,opt,name=enable_rpc,json=enableRpc,proto3" form:"enable_rpc" json:"enable_rpc,omitempty" query:"enable_rpc"`
	IsPlatformCoin    int32   `protobuf:"varint,9,opt,name=is_platform_coin,json=isPlatformCoin,proto3" form:"is_platform_coin" json:"is_platform_coin,omitempty" query:"is_platform_coin"`
	MaxTxFee          float64 `protobuf:"fixed64,10,opt,name=max_tx_fee,json=maxTxFee,proto3" form:"max_tx_fee" json:"max_tx_fee,omitempty" query:"max_tx_fee"`
	MaxWithdrawAmount float64 `protobuf:"fixed64,11,opt,name=max_withdraw_amount,json=maxWithdrawAmount,proto3" form:"max_withdraw_amount" json:"max_withdraw_amount,omitempty" query:"max_withdraw_amount"`
	MinTxFee          float64 `protobuf:"fixed64,12,opt,name=min_tx_fee,json=minTxFee,proto3" form:"min_tx_fee" json:"min_tx_fee,omitempty" query:"min_tx_fee"`
	MinWithdrawAmount float64 `protobuf:"fixed64,13,opt,name=min_withdraw_amount,json=minWithdrawAmount,proto3" form:"min_withdraw_amount" json:"min_withdraw_amount,omitempty" query:"min_withdraw_amount"`
	NameCn            string  `protobuf:"bytes,14,opt,name=name_cn,json=nameCn,proto3" form:"name_cn" json:"name_cn,omitempty" query:"name_cn"`
	Sort              int32   `protobuf:"varint,15,opt,name=sort,proto3" form:"sort" json:"sort,omitempty" query:"sort"`
	Status            int32   `protobuf:"varint,16,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`
	Unit              string  `protobuf:"bytes,17,opt,name=unit,proto3" form:"unit" json:"unit,omitempty" query:"unit"`
	UsdRate           float64 `protobuf:"fixed64,18,opt,name=usd_rate,json=usdRate,proto3" form:"usd_rate" json:"usd_rate,omitempty" query:"usd_rate"`
	WithdrawThreshold float64 `protobuf:"fixed64,19,opt,name=withdraw_threshold,json=withdrawThreshold,proto3" form:"withdraw_threshold" json:"withdraw_threshold,omitempty" query:"withdraw_threshold"`
	HasLegal          int32   `protobuf:"varint,20,opt,name=has_legal,json=hasLegal,proto3" form:"has_legal" json:"has_legal,omitempty" query:"has_legal"`
	ColdWalletAddress string  `protobuf:"bytes,21,opt,name=cold_wallet_address,json=coldWalletAddress,proto3" form:"cold_wallet_address" json:"cold_wallet_address,omitempty" query:"cold_wallet_address"`
	MinerFee          float64 `protobuf:"fixed64,22,opt,name=miner_fee,json=minerFee,proto3" form:"miner_fee" json:"miner_fee,omitempty" query:"miner_fee"`
	WithdrawScale     int32   `protobuf:"varint,23,opt,name=withdraw_scale,json=withdrawScale,proto3" form:"withdraw_scale" json:"withdraw_scale,omitempty" query:"withdraw_scale"`
	AccountType       int32   `protobuf:"varint,24,opt,name=account_type,json=accountType,proto3" form:"account_type" json:"account_type,omitempty" query:"account_type"`
	DepositAddress    string  `protobuf:"bytes,25,opt,name=deposit_address,json=depositAddress,proto3" form:"deposit_address" json:"deposit_address,omitempty" query:"deposit_address"`
	Infolink          string  `protobuf:"bytes,26,opt,name=infolink,proto3" form:"infolink" json:"infolink,omitempty" query:"infolink"`
	Information       string  `protobuf:"bytes,27,opt,name=information,proto3" form:"information" json:"information,omitempty" query:"information"`
	MinRechargeAmount float64 `protobuf:"fixed64,28,opt,name=min_recharge_amount,json=minRechargeAmount,proto3" form:"min_recharge_amount" json:"min_recharge_amount,omitempty" query:"min_recharge_amount"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{9}
}

func (x *Coin) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Coin) GetCanAutoWithdraw() int32 {
	if x != nil {
		return x.CanAutoWithdraw
	}
	return 0
}

func (x *Coin) GetCanRecharge() int32 {
	if x != nil {
		return x.CanRecharge
	}
	return 0
}

func (x *Coin) GetCanTransfer() int32 {
	if x != nil {
		return x.CanTransfer
	}
	return 0
}

func (x *Coin) GetCanWithdraw() int32 {
	if x != nil {
		return x.CanWithdraw
	}
	return 0
}

func (x *Coin) GetCnyRate() float64 {
	if x != nil {
		return x.CnyRate
	}
	return 0
}

func (x *Coin) GetEnableRpc() int32 {
	if x != nil {
		return x.EnableRpc
	}
	return 0
}

func (x *Coin) GetIsPlatformCoin() int32 {
	if x != nil {
		return x.IsPlatformCoin
	}
	return 0
}

func (x *Coin) GetMaxTxFee() float64 {
	if x != nil {
		return x.MaxTxFee
	}
	return 0
}

func (x *Coin) GetMaxWithdrawAmount() float64 {
	if x != nil {
		return x.MaxWithdrawAmount
	}
	return 0
}

func (x *Coin) GetMinTxFee() float64 {
	if x != nil {
		return x.MinTxFee
	}
	return 0
}

func (x *Coin) GetMinWithdrawAmount() float64 {
	if x != nil {
		return x.MinWithdrawAmount
	}
	return 0
}

func (x *Coin) GetNameCn() string {
	if x != nil {
		return x.NameCn
	}
	return ""
}

func (x *Coin) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Coin) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Coin) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Coin) GetUsdRate() float64 {
	if x != nil {
		return x.UsdRate
	}
	return 0
}

func (x *Coin) GetWithdrawThreshold() float64 {
	if x != nil {
		return x.WithdrawThreshold
	}
	return 0
}

func (x *Coin) GetHasLegal() int32 {
	if x != nil {
		return x.HasLegal
	}
	return 0
}

func (x *Coin) GetColdWalletAddress() string {
	if x != nil {
		return x.ColdWalletAddress
	}
	return ""
}

func (x *Coin) GetMinerFee() float64 {
	if x != nil {
		return x.MinerFee
	}
	return 0
}

func (x *Coin) GetWithdrawScale() int32 {
	if x != nil {
		return x.WithdrawScale
	}
	return 0
}

func (x *Coin) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *Coin) GetDepositAddress() string {
	if x != nil {
		return x.DepositAddress
	}
	return ""
}

func (x *Coin) GetInfolink() string {
	if x != nil {
		return x.Infolink
	}
	return ""
}

func (x *Coin) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

func (x *Coin) GetMinRechargeAmount() float64 {
	if x != nil {
		return x.MinRechargeAmount
	}
	return 0
}

type MemberWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	Address        string  `protobuf:"bytes,2,opt,name=address,proto3" form:"address" json:"address,omitempty" query:"address"`
	Balance        float64 `protobuf:"fixed64,3,opt,name=balance,proto3" form:"balance" json:"balance,omitempty" query:"balance"`
	FrozenBalance  float64 `protobuf:"fixed64,4,opt,name=frozen_balance,json=frozenBalance,proto3" form:"frozen_balance" json:"frozen_balance,omitempty" query:"frozen_balance"`
	ReleaseBalance float64 `protobuf:"fixed64,5,opt,name=release_balance,json=releaseBalance,proto3" form:"release_balance" json:"release_balance,omitempty" query:"release_balance"`
	IsLock         int32   `protobuf:"varint,6,opt,name=is_lock,json=isLock,proto3" form:"is_lock" json:"is_lock,omitempty" query:"is_lock"`
	MemberId       int64   `protobuf:"varint,7,opt,name=member_id,json=memberId,proto3" form:"member_id" json:"member_id,omitempty" query:"member_id"`
	Version        int32   `protobuf:"varint,8,opt,name=version,proto3" form:"version" json:"version,omitempty" query:"version"`
	Coin           *Coin   `protobuf:"bytes,9,opt,name=coin,proto3" form:"coin" json:"coin,omitempty" query:"coin"`
	ToReleased     float64 `protobuf:"fixed64,10,opt,name=to_released,json=toReleased,proto3" form:"to_released" json:"to_released,omitempty" query:"to_released"`
}

func (x *MemberWallet) Reset() {
	*x = MemberWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberWallet) ProtoMessage() {}

func (x *MemberWallet) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberWallet.ProtoReflect.Descriptor instead.
func (*MemberWallet) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{10}
}

func (x *MemberWallet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberWallet) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MemberWallet) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *MemberWallet) GetFrozenBalance() float64 {
	if x != nil {
		return x.FrozenBalance
	}
	return 0
}

func (x *MemberWallet) GetReleaseBalance() float64 {
	if x != nil {
		return x.ReleaseBalance
	}
	return 0
}

func (x *MemberWallet) GetIsLock() int32 {
	if x != nil {
		return x.IsLock
	}
	return 0
}

func (x *MemberWallet) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberWallet) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MemberWallet) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *MemberWallet) GetToReleased() float64 {
	if x != nil {
		return x.ToReleased
	}
	return 0
}

type ApproveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApproveReq) Reset() {
	*x = ApproveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveReq) ProtoMessage() {}

func (x *ApproveReq) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveReq.ProtoReflect.Descriptor instead.
func (*ApproveReq) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{11}
}

type MemberSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username             string `protobuf:"bytes,1,opt,name=username,proto3" form:"username" json:"username,omitempty" query:"username"`
	Id                   int64  `protobuf:"varint,2,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`
	CreateTime           string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`
	RealVerified         string `protobuf:"bytes,4,opt,name=real_verified,json=realVerified,proto3" form:"real_verified" json:"real_verified,omitempty" query:"real_verified"`
	EmailVerified        string `protobuf:"bytes,5,opt,name=email_verified,json=emailVerified,proto3" form:"email_verified" json:"email_verified,omitempty" query:"email_verified"`
	PhoneVerified        string `protobuf:"bytes,6,opt,name=phone_verified,json=phoneVerified,proto3" form:"phone_verified" json:"phone_verified,omitempty" query:"phone_verified"`
	LoginVerified        string `protobuf:"bytes,7,opt,name=login_verified,json=loginVerified,proto3" form:"login_verified" json:"login_verified,omitempty" query:"login_verified"`
	FundsVerified        string `protobuf:"bytes,8,opt,name=funds_verified,json=fundsVerified,proto3" form:"funds_verified" json:"funds_verified,omitempty" query:"funds_verified"`
	RealAuditing         string `protobuf:"bytes,9,opt,name=real_auditing,json=realAuditing,proto3" form:"real_auditing" json:"real_auditing,omitempty" query:"real_auditing"`
	MobilePhone          string `protobuf:"bytes,10,opt,name=mobile_phone,json=mobilePhone,proto3" form:"mobile_phone" json:"mobile_phone,omitempty" query:"mobile_phone"`
	Email                string `protobuf:"bytes,11,opt,name=email,proto3" form:"email" json:"email,omitempty" query:"email"`
	RealName             string `protobuf:"bytes,12,opt,name=real_name,json=realName,proto3" form:"real_name" json:"real_name,omitempty" query:"real_name"`
	RealNameRejectReason string `protobuf:"bytes,13,opt,name=real_name_reject_reason,json=realNameRejectReason,proto3" form:"real_name_reject_reason" json:"real_name_reject_reason,omitempty" query:"real_name_reject_reason"`
	IdCard               string `protobuf:"bytes,14,opt,name=id_card,json=idCard,proto3" form:"id_card" json:"id_card,omitempty" query:"id_card"`
	Avatar               string `protobuf:"bytes,15,opt,name=avatar,proto3" form:"avatar" json:"avatar,omitempty" query:"avatar"`
	AccountVerified      string `protobuf:"bytes,16,opt,name=account_verified,json=accountVerified,proto3" form:"account_verified" json:"account_verified,omitempty" query:"account_verified"`
}

func (x *MemberSecurity) Reset() {
	*x = MemberSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberSecurity) ProtoMessage() {}

func (x *MemberSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberSecurity.ProtoReflect.Descriptor instead.
func (*MemberSecurity) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{12}
}

func (x *MemberSecurity) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MemberSecurity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberSecurity) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MemberSecurity) GetRealVerified() string {
	if x != nil {
		return x.RealVerified
	}
	return ""
}

func (x *MemberSecurity) GetEmailVerified() string {
	if x != nil {
		return x.EmailVerified
	}
	return ""
}

func (x *MemberSecurity) GetPhoneVerified() string {
	if x != nil {
		return x.PhoneVerified
	}
	return ""
}

func (x *MemberSecurity) GetLoginVerified() string {
	if x != nil {
		return x.LoginVerified
	}
	return ""
}

func (x *MemberSecurity) GetFundsVerified() string {
	if x != nil {
		return x.FundsVerified
	}
	return ""
}

func (x *MemberSecurity) GetRealAuditing() string {
	if x != nil {
		return x.RealAuditing
	}
	return ""
}

func (x *MemberSecurity) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *MemberSecurity) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MemberSecurity) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *MemberSecurity) GetRealNameRejectReason() string {
	if x != nil {
		return x.RealNameRejectReason
	}
	return ""
}

func (x *MemberSecurity) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *MemberSecurity) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MemberSecurity) GetAccountVerified() string {
	if x != nil {
		return x.AccountVerified
	}
	return ""
}

type WithdrawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit       string  `protobuf:"bytes,1,opt,name=unit,proto3" form:"unit" json:"unit,omitempty" query:"unit"`
	Address    string  `protobuf:"bytes,2,opt,name=address,proto3" form:"address" json:"address,omitempty" query:"address"`
	Amount     float64 `protobuf:"fixed64,3,opt,name=amount,proto3" form:"amount" json:"amount,omitempty" query:"amount"`
	Fee        float64 `protobuf:"fixed64,4,opt,name=fee,proto3" form:"fee" json:"fee,omitempty" query:"fee"`
	JyPassword string  `protobuf:"bytes,5,opt,name=jy_password,json=jyPassword,proto3" form:"jy_password" json:"jy_password,omitempty" query:"jy_password"`
	Code       string  `protobuf:"bytes,6,opt,name=code,proto3" form:"code" json:"code,omitempty" query:"code"`
	Page       int32   `protobuf:"varint,7,opt,name=page,proto3" form:"page" json:"page,omitempty" query:"page"`
	PageSize   int32   `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" form:"page_size" json:"page_size,omitempty" query:"page_size"`
}

func (x *WithdrawReq) Reset() {
	*x = WithdrawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawReq) ProtoMessage() {}

func (x *WithdrawReq) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawReq.ProtoReflect.Descriptor instead.
func (*WithdrawReq) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{13}
}

func (x *WithdrawReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *WithdrawReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawReq) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *WithdrawReq) GetJyPassword() string {
	if x != nil {
		return x.JyPassword
	}
	return ""
}

func (x *WithdrawReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WithdrawReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *WithdrawReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type WithdrawWalletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit            string           `protobuf:"bytes,1,opt,name=unit,proto3" form:"unit" json:"unit,omitempty" query:"unit"`
	Threshold       float64          `protobuf:"fixed64,2,opt,name=threshold,proto3" form:"threshold" json:"threshold,omitempty" query:"threshold"`
	MinAmount       float64          `protobuf:"fixed64,3,opt,name=min_amount,json=minAmount,proto3" form:"min_amount" json:"min_amount,omitempty" query:"min_amount"`
	MaxAmount       float64          `protobuf:"fixed64,4,opt,name=max_amount,json=maxAmount,proto3" form:"max_amount" json:"max_amount,omitempty" query:"max_amount"`
	MinTxFee        float64          `protobuf:"fixed64,5,opt,name=min_tx_fee,json=minTxFee,proto3" form:"min_tx_fee" json:"min_tx_fee,omitempty" query:"min_tx_fee"`
	MaxTxFee        float64          `protobuf:"fixed64,6,opt,name=max_tx_fee,json=maxTxFee,proto3" form:"max_tx_fee" json:"max_tx_fee,omitempty" query:"max_tx_fee"`
	NameCn          string           `protobuf:"bytes,7,opt,name=name_cn,json=nameCn,proto3" form:"name_cn" json:"name_cn,omitempty" query:"name_cn"`
	Name            string           `protobuf:"bytes,8,opt,name=name,proto3" form:"name" json:"name,omitempty" query:"name"`
	Balance         float64          `protobuf:"fixed64,9,opt,name=balance,proto3" form:"balance" json:"balance,omitempty" query:"balance"`
	CanAutoWithdraw string           `protobuf:"bytes,10,opt,name=can_auto_withdraw,json=canAutoWithdraw,proto3" form:"can_auto_withdraw" json:"can_auto_withdraw,omitempty" query:"can_auto_withdraw"`
	WithdrawScale   int32            `protobuf:"varint,11,opt,name=withdraw_scale,json=withdrawScale,proto3" form:"withdraw_scale" json:"withdraw_scale,omitempty" query:"withdraw_scale"`
	AccountType     int32            `protobuf:"varint,12,opt,name=account_type,json=accountType,proto3" form:"account_type" json:"account_type,omitempty" query:"account_type"`
	Addresses       []*AddressSimple `protobuf:"bytes,13,rep,name=addresses,proto3" form:"addresses" json:"addresses,omitempty" query:"addresses"`
}

func (x *WithdrawWalletInfo) Reset() {
	*x = WithdrawWalletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawWalletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawWalletInfo) ProtoMessage() {}

func (x *WithdrawWalletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawWalletInfo.ProtoReflect.Descriptor instead.
func (*WithdrawWalletInfo) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{14}
}

func (x *WithdrawWalletInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *WithdrawWalletInfo) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *WithdrawWalletInfo) GetMinAmount() float64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *WithdrawWalletInfo) GetMaxAmount() float64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *WithdrawWalletInfo) GetMinTxFee() float64 {
	if x != nil {
		return x.MinTxFee
	}
	return 0
}

func (x *WithdrawWalletInfo) GetMaxTxFee() float64 {
	if x != nil {
		return x.MaxTxFee
	}
	return 0
}

func (x *WithdrawWalletInfo) GetNameCn() string {
	if x != nil {
		return x.NameCn
	}
	return ""
}

func (x *WithdrawWalletInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WithdrawWalletInfo) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *WithdrawWalletInfo) GetCanAutoWithdraw() string {
	if x != nil {
		return x.CanAutoWithdraw
	}
	return ""
}

func (x *WithdrawWalletInfo) GetWithdrawScale() int32 {
	if x != nil {
		return x.WithdrawScale
	}
	return 0
}

func (x *WithdrawWalletInfo) GetAccountType() int32 {
	if x != nil {
		return x.AccountType
	}
	return 0
}

func (x *WithdrawWalletInfo) GetAddresses() []*AddressSimple {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type AddressSimple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark  string `protobuf:"bytes,1,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" form:"address" json:"address,omitempty" query:"address"`
}

func (x *AddressSimple) Reset() {
	*x = AddressSimple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ucenter_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressSimple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressSimple) ProtoMessage() {}

func (x *AddressSimple) ProtoReflect() protoreflect.Message {
	mi := &file_ucenter_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressSimple.ProtoReflect.Descriptor instead.
func (*AddressSimple) Descriptor() ([]byte, []int) {
	return file_ucenter_api_proto_rawDescGZIP(), []int{15}
}

func (x *AddressSimple) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddressSimple) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_ucenter_api_proto protoreflect.FileDescriptor

var file_ucenter_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x3a, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x07, 0x0a, 0x05, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xcc, 0x02, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xa3, 0x02, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x22, 0xad, 0x07, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6e, 0x79,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x6e, 0x79,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72,
	0x70, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x70, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69,
	0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x46, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x61, 0x78, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x5f, 0x74, 0x78, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x54, 0x78, 0x46, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e,
	0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x63, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65,
	0x43, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x64, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x75, 0x73, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x61, 0x73, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6c,
	0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66,
	0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x22, 0xac, 0x04, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x75, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x79, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6a, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xb7, 0x03, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x78,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x54,
	0x78, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x78, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x46,
	0x65, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6e,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xad, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x08, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0xd2, 0xc1, 0x18, 0x12, 0x2f, 0x75, 0x63, 0x2f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0xd2, 0xc1, 0x18, 0x0f, 0x2f, 0x75, 0x63,
	0x2f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x17, 0x5a, 0x15,
	0x75, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x7a, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ucenter_api_proto_rawDescOnce sync.Once
	file_ucenter_api_proto_rawDescData = file_ucenter_api_proto_rawDesc
)

func file_ucenter_api_proto_rawDescGZIP() []byte {
	file_ucenter_api_proto_rawDescOnce.Do(func() {
		file_ucenter_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_ucenter_api_proto_rawDescData)
	})
	return file_ucenter_api_proto_rawDescData
}

var file_ucenter_api_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ucenter_api_proto_goTypes = []interface{}{
	(*Request)(nil),            // 0: ucenter_api.Request
	(*CaptchaReq)(nil),         // 1: ucenter_api.CaptchaReq
	(*Response)(nil),           // 2: ucenter_api.Response
	(*CodeRequest)(nil),        // 3: ucenter_api.CodeRequest
	(*NoRes)(nil),              // 4: ucenter_api.NoRes
	(*LoginReq)(nil),           // 5: ucenter_api.LoginReq
	(*LoginRes)(nil),           // 6: ucenter_api.LoginRes
	(*AssetReq)(nil),           // 7: ucenter_api.AssetReq
	(*MemberTransaction)(nil),  // 8: ucenter_api.MemberTransaction
	(*Coin)(nil),               // 9: ucenter_api.Coin
	(*MemberWallet)(nil),       // 10: ucenter_api.MemberWallet
	(*ApproveReq)(nil),         // 11: ucenter_api.ApproveReq
	(*MemberSecurity)(nil),     // 12: ucenter_api.MemberSecurity
	(*WithdrawReq)(nil),        // 13: ucenter_api.WithdrawReq
	(*WithdrawWalletInfo)(nil), // 14: ucenter_api.WithdrawWalletInfo
	(*AddressSimple)(nil),      // 15: ucenter_api.AddressSimple
}
var file_ucenter_api_proto_depIdxs = []int32{
	9,  // 0: ucenter_api.MemberWallet.coin:type_name -> ucenter_api.Coin
	15, // 1: ucenter_api.WithdrawWalletInfo.addresses:type_name -> ucenter_api.AddressSimple
	0,  // 2: ucenter_api.Register.Register:input_type -> ucenter_api.Request
	3,  // 3: ucenter_api.Register.SendCode:input_type -> ucenter_api.CodeRequest
	2,  // 4: ucenter_api.Register.Register:output_type -> ucenter_api.Response
	2,  // 5: ucenter_api.Register.SendCode:output_type -> ucenter_api.Response
	4,  // [4:6] is the sub-list for method output_type
	2,  // [2:4] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_ucenter_api_proto_init() }
func file_ucenter_api_proto_init() {
	if File_ucenter_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ucenter_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawWalletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ucenter_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressSimple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ucenter_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ucenter_api_proto_goTypes,
		DependencyIndexes: file_ucenter_api_proto_depIdxs,
		MessageInfos:      file_ucenter_api_proto_msgTypes,
	}.Build()
	File_ucenter_api_proto = out.File
	file_ucenter_api_proto_rawDesc = nil
	file_ucenter_api_proto_goTypes = nil
	file_ucenter_api_proto_depIdxs = nil
}
